### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/profiles.conf

 ##############
 # 配置预设组 #
 ##############




#着色器自动配置文件 (根据视频高度自动应用)
# 1. 定义一个所有配置的基础模板
# --------------------------------------------------------------------
[base_profile]
# 在基础模板里，加载我们共用的 hdeband 着色器
glsl-shaders="~~/shaders/hdeband.glsl"
# 【场景一】动漫专用放大 (1080p -> 2K)
[anime_upscale_quality]
profile=base_profile  # 首先继承 base_profile 的所有设置
profile-desc="Anime Upscale [Quality] Profile"
profile-cond=p["height"] > 719 and p["height"] <= 1080 and string.match(p.path, "动漫")
# 然后，使用 glsl-shaders-append 追加上动漫专用的着色器
glsl-shaders-append="~~/shaders/AiUpscale_Medium_2x_LineArt.glsl"
glsl-shaders-append="~~/shaders/adaptive_sharpen_RT.glsl"
# ================== 动漫手动快捷键专用配置 ==================
[manual_anime_mode]
profile-desc="手动激活的动漫专用高质量配置"
# 将我们为动漫选择的最佳着色器组合完整地放在这里
glsl-shaders="~~/shaders/hdeband.glsl;~~/shaders/AiUpscale_Medium_2x_LineArt.glsl;~~/shaders/adaptive_sharpen_RT.glsl"

# 【场景二】普通视频专用放大 (1080p -> 2K)
[photo_upscale_quality]
profile=base_profile  # 继承基础模板
profile-desc="Photo Upscale [Quality] Profile"
profile-cond=p["height"] > 719 and p["height"] <= 1080
# 追加 FSRCNNX 和 CAS
glsl-shaders-append="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"
glsl-shaders-append="~~/shaders/AMD_CAS_RT.glsl"
# 【场景三】轻量化 4K 播放配置 (4K -> 2K)
[4k_lightweight]
profile=base_profile  # 继承基础模板
profile-desc="Lightweight 4K Profile (>1080p)"
profile-cond=p["height"] > 1080
dscale=catmull_rom
# 追加 CAS
glsl-shaders-append="~~/shaders/AMD_CAS_RT.glsl"





#-- Profile: HDR-Passthrough (HDR 直通)
#   当系统开启 HDR 且播放 HDR 视频时自动激活。
#   这是最高质量的 HDR 播放模式。
[HDR-Passthrough]
profile-desc = HDR视频直通模式
# 触发条件: 视频是HDR (max-luma > 203 nits) 且 显示器处于HDR模式 (display-hdr-peak > 203 nits)
profile-cond = get("video-params/max-luma") > 203 and get("display-hdr-peak") > 203
profile-restore = copy

# 禁用 mpv 内部的色调映射，因为信号是直接传给显示器的
tone-mapping = clip
# 让显示器处理色调，所以我们告诉 mpv 目标是 PQ 曲线
target-trc = pq
# 自动从系统获取显示器的峰值亮度，这是最精准的做法，无需手动设为 400
target-peak = auto
# 自动获取色域信息
target-prim = auto
# 禁用 ICC 色彩管理，防止 Windows 色彩管理对 HDR 信号造成干扰
icc-profile-auto = no
# 字幕设置，gpu-next 下字幕会和视频一同被正确处理，blend-subtitles=yes 观感更好
blend-subtitles = yes


#-- Profile: HDR-to-SDR-Tone-Mapping (HDR 转 SDR 色调映射)
#   当系统处于 SDR 模式但播放 HDR 视频时自动激活。
[HDR-to-SDR-Tone-Mapping]
profile-desc = HDR视频色调映射至SDR显示器
# 触发条件: 视频是HDR (max-luma > 203 nits) 但 显示器处于SDR模式 (display-hdr-peak <= 203 nits)
profile-cond = get("video-params/max-luma") > 203 and (get("display-hdr-peak", 0) <= 203)
profile-restore = copy

# 启用色调映射功能
tone-mapping = auto # 或者使用 hable, mobius 等，auto 通常效果不错
# 自动检测目标亮度，此时会是 SDR 的亮度 (约 100-140 nits)
target-peak = auto



#[HDR-direct]
#profile-cond=p["video-params/sig-peak"]>1 and p["video-params/gamma"]=="pq"
#profile-restore=copy
#target-trc=pq
#target-peak=400 # 目标峰值亮度应以你的显示器实际为准

[speed_limit1]
 profile-desc = 速度变化下限的控制
 profile-cond = p.speed<0.1
 speed = 0.1


[speed_limit2]
 profile-desc = 速度变化上限的控制
 profile-cond = p.speed>8
 speed = 8


[ontop_playback]
 profile-desc = 基于播放状态的自动置顶
#profile-cond = not pause and not p.idle_active   # 未自动启用
 profile-restore = copy
 ontop = yes


## https://github.com/mpv-player/mpv/issues/11122
[vsync_auto]
 profile-desc = 基于帧率或垂直同步率或速率的自动视频同步
 profile-cond = p.container_fps>32 or (p.display_fps/p.container_fps)>3.2 or p.speed~=1
 profile-restore = copy
 interpolation = no
 video-sync = audio


[deband_bitrate]
 profile-desc = 基于码率的自动去色带
 profile-cond = ((p.file_size/1024)*8)/p.duration<=3000
 profile-restore = copy
 deband = yes


[save_props_auto]
 profile-desc = 基于进度或时长或视频轨类型的自动保存属性
 profile-cond = p.percent_pos>=90 or p.duration<=300 or not vid or p["current-tracks/video/albumart"] or p["current-tracks/video/image"]
 profile-restore = copy
 save-position-on-quit = no


